[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "openai",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "openai",
        "description": "openai",
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "read_root",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def read_root():\n    return {\"message\": \"Hello World from FastAPI on Render with Google CSE and OpenAI!\"}\n@app.get(\"/search\")\ndef perform_search(query: str):\n    \"\"\"\n    Effettua una ricerca su Google Custom Search API.\n    Parametro: query (string)\n    Ritorna: risultati della ricerca in JSON\n    \"\"\"\n    url = \"https://www.googleapis.com/customsearch/v1\"",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "perform_search",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def perform_search(query: str):\n    \"\"\"\n    Effettua una ricerca su Google Custom Search API.\n    Parametro: query (string)\n    Ritorna: risultati della ricerca in JSON\n    \"\"\"\n    url = \"https://www.googleapis.com/customsearch/v1\"\n    params = {\n        \"key\": GOOGLE_API_KEY,\n        \"cx\": GOOGLE_CSE_ID,",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "scrape_article",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def scrape_article(url: str) -> str:\n    \"\"\"\n    Effettua lo scraping del contenuto testuale di un articolo da un URL.\n    Ritorna il testo estratto come stringa.\n    \"\"\"\n    try:\n        r = requests.get(url, timeout=10)\n        r.raise_for_status()\n    except requests.RequestException as e:\n        print(e)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "generate_article",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def generate_article(query: str):\n    \"\"\"\n    Usa la query per cercare un articolo, ne effettua lo scraping del primo risultato\n    e poi invia il contenuto a OpenAI per generare un nuovo articolo.\n    \"\"\"\n    # 1. Faccio una ricerca\n    search_results = perform_search(query=query)\n    items = search_results.get(\"items\", [])\n    if not items:\n        raise HTTPException(status_code=404, detail=\"Nessun risultato trovato per la query.\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\n# Leggiamo le variabili d'ambiente\nGOOGLE_API_KEY = os.getenv(\"GOOGLE_API_KEY\")\nGOOGLE_CSE_ID = os.getenv(\"GOOGLE_CSE_ID\")\nOPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\nif not GOOGLE_API_KEY or not GOOGLE_CSE_ID or not OPENAI_API_KEY:\n    raise RuntimeError(\"Mancano le variabili d'ambiente: GOOGLE_API_KEY, GOOGLE_CSE_ID o OPENAI_API_KEY non impostate.\")\nopenai.api_key = OPENAI_API_KEY\n@app.get(\"/\")\ndef read_root():",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "GOOGLE_API_KEY",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "GOOGLE_API_KEY = os.getenv(\"GOOGLE_API_KEY\")\nGOOGLE_CSE_ID = os.getenv(\"GOOGLE_CSE_ID\")\nOPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\nif not GOOGLE_API_KEY or not GOOGLE_CSE_ID or not OPENAI_API_KEY:\n    raise RuntimeError(\"Mancano le variabili d'ambiente: GOOGLE_API_KEY, GOOGLE_CSE_ID o OPENAI_API_KEY non impostate.\")\nopenai.api_key = OPENAI_API_KEY\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello World from FastAPI on Render with Google CSE and OpenAI!\"}\n@app.get(\"/search\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "GOOGLE_CSE_ID",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "GOOGLE_CSE_ID = os.getenv(\"GOOGLE_CSE_ID\")\nOPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\nif not GOOGLE_API_KEY or not GOOGLE_CSE_ID or not OPENAI_API_KEY:\n    raise RuntimeError(\"Mancano le variabili d'ambiente: GOOGLE_API_KEY, GOOGLE_CSE_ID o OPENAI_API_KEY non impostate.\")\nopenai.api_key = OPENAI_API_KEY\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello World from FastAPI on Render with Google CSE and OpenAI!\"}\n@app.get(\"/search\")\ndef perform_search(query: str):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "OPENAI_API_KEY",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\nif not GOOGLE_API_KEY or not GOOGLE_CSE_ID or not OPENAI_API_KEY:\n    raise RuntimeError(\"Mancano le variabili d'ambiente: GOOGLE_API_KEY, GOOGLE_CSE_ID o OPENAI_API_KEY non impostate.\")\nopenai.api_key = OPENAI_API_KEY\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello World from FastAPI on Render with Google CSE and OpenAI!\"}\n@app.get(\"/search\")\ndef perform_search(query: str):\n    \"\"\"",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "openai.api_key",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "openai.api_key = OPENAI_API_KEY\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello World from FastAPI on Render with Google CSE and OpenAI!\"}\n@app.get(\"/search\")\ndef perform_search(query: str):\n    \"\"\"\n    Effettua una ricerca su Google Custom Search API.\n    Parametro: query (string)\n    Ritorna: risultati della ricerca in JSON",
        "detail": "main",
        "documentation": {}
    }
]